Main method
============
Our program contains main method or not.

Either it is properly declare or not.

It is not a responsibility of a compiler to check.

It is a liability of a JVM to look for main method always at runtime.

If JVM won't find main method then it will throw one runtime error called main method not found.

JVM always look for main method with following signature.

signature
---------
	public static void main(String[] args)


If we perform any changes in above signature then JVM will throw one runtime error called main method not found.


Q) Explain main method in java?

public 
------
	JVM wants to call main method from anywhere.

static 
------
	JVM wants to call main method without using object reference.

void 
----
	Main method does not return anything to JVM.

main
----
	It is an identifier given to a main method.


String[] args 
------------
	It is a command line argument.


We can perform following changes in main method.

1) Order of modifiers is not important in case of public static we can declare static public also.
   ex:
		static public void main(String[] args)

		
2) We can change String[] in following acceptable formats.
   ex:
		public static void main(String[] args)
		public static void main(String   []args)
		public static void main(String  args[])


3) We can replace String[] with var-arg parameter.
   ex:
		public static void main(String... args)

		public static void main(String ...args)


4) We can change args with any java valid identifier.
   ex:
		public static void main(String[]  ihub)


5) A main method will accept following modifiers.
   ex:
		synchronized 
		strictfp
		final 	



Command line argument
=====================
Arguments which are passing through command prompt such type of arguments are called command line arguments.

In command line argument, we need to pass our arguments/inputs at runtime command.

ex:
	javac    Test.java 

	java     Test   101   raja   M   1000.0	
			|	|    |	  |_____args[3]
			|	|    |__________args[2]	
			|       |_______________args[1]
			|_______________________args[0]

ex:
---
class Test
{
	public  static  void main(String[]  args)
	{
		System.out.println(args[0]);
		System.out.println(args[1]);
		System.out.println(args[2]);
		System.out.println(args[3]);
	}
}
o/p:
	javac  Test.java
	java   Test 101 raja m 1000.0



Q) Write a java program to accept one name and display it ?

	
class Test
{
	public  static  void main(String[]  args)
	{
		String name=args[0];
		System.out.println("Welcome :"+name);
	}
}

ex:
	javac  Test.java
	java   Test James 

output:
	Welcome : James 



ex:
---
class Test
{
	public  static  void main(String[]  args)
	{
		String firstName=args[0];
		
		String lastName=args[1];

		System.out.println(firstName+lastName);
	}
}  

ex:
	javac  Test.java
	java   Test  james  gosling 

output:
	jamesgosling 



ex:
---
class Test
{
	public  static  void main(String[]  args)
	{
		m1();
	}
	public static void m1()
	{
		String name=args[0];
		System.out.println("Welcome :"+name);
	}
}
o/p:
	C.T.E  : cannot find symbol










































	









		
	
























