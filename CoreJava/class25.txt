iv) With returntype with argument method
========================================

Q) Write a java program to perform sum of two numbers by using with returntype with argument method?


import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a=sc.nextInt();

		System.out.println("Enter the second number :");
		int b=sc.nextInt();

		//caller method
		System.out.println("Sum of two numbers is ="+sum(a,b));

	}
	//callie method
	public static int sum(int a,int b)
	{
		int c=a+b;

		return c;
	}
}

Q) Write a java program to check given number is even or odd by using with returntype with argument method?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();

		//caller method
		if(find(n))
			System.out.println("It is even number");
		else
			System.out.println("It is odd number");
	}
	//callie method
	public static boolean find(int n)
	{
			if(n%2==0)
				return true;
			else
				return false;
	}
}


Recursion
==========
A method which call itself for many number of times is called recursion.

Recursion is similar to loopings. 

It means whenever we use recursion, we should not use loops.


Q) Write a java program to display 10 Natural numbers without using loops?

class Test  
{
	public static void main(String[] args) 
	{
		//caller method
		display(1);
	}

	//callie method
	public static void display(int i)
	{
		if(i<=10)
		{
			System.out.print(i+" "); //1 2 3 4 5 6 7 8 9 10 
			display(i+1);
		}
	}
}


Q) Write a java program to find out factorial of a given number?

Input:
	5

Output:
	120 

ex:

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();

		//caller method
		System.out.println("Factorial of a given number  is ="+factorial(n));

	}
	
	//callie method
	public static int factorial(int n)
	{
		if(n<0)
			return -1;
		if(n==0)
			return 1;

		return  n*factorial(n-1);
	}
}


Q) Write a java program to find out N-th element of fibonacci series?

fibonacci series : 0 1 1 2 3 5 8 

Input:
	5

Output:
	3

ex:
---
import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);		
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();
		
		//caller method 
		System.out.println(fib(n));
	}
	
	//callie method
	public static int fib(int n)
	{
		if(n==0 || n==1)
			return 0;
		if(n==2)
			return 1;

		return fib(n-1)+fib(n-2);
	}
}


Q) Write a java program to perform sum of two numbers without using arithmetic operator?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a=sc.nextInt();
		
		System.out.println("Enter the second number :");
		int b=sc.nextInt();

		//caller method
		System.out.println("sum of two numbers is ="+sum(a,b));

	}
	//callie method
	public static int sum(int a,int b)
	{
		if(a==0)
			return b;

		return sum(--a,++b);
	}
}

4) Jump Statement
=================
Jump statement is used to jump from one section of code to another section.

We have two types of jump statements.

1) break stmt 

2) continue stmt 

1) break stmt
-------------
A break stmt is used to break the execution of loops and switch case.

For conditional statements we can use if condition.

syntax:
	break;

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");	
		break;
		System.out.println("stmt2");
	}
}
o/p:
	C.T.E : break outside switch or loop


ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");	
		if(true)
		{
			break;
		}
		System.out.println("stmt2");
	}
}
o/p:
		C.T.E : break outside switch or loop


ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		for(int i=1;i<=10;i++)
		{
			if(i==5)
			{
				break;
			}

			System.out.print(i+" "); //1 2 3 4 
		}
	}
}



ii) continue stmt
------------------
A continue stmt is used to continue the execution of loops.

For conditional statements we can use if condition.

syntax:
------
	continue;

ex:
----
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		continue;
		System.out.println("stmt2");
	}
}
o/p:
	C.T.E : continue outside of loop

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		System.out.println("stmt1");
		if(true)
		{
			continue;
		}
		System.out.println("stmt2");
	}
}
o/p:
	C.T.E : continue outside of loop

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		for(int i=1;i<=10;i++)
		{
			if(i==5)
			{
				continue;
			}

			System.out.print(i+" ");//1 2 3 4 6 7 8 9 10
		}
	}
}


Assignment
==========
Q) Write a java program to display reverse of a given number?

input:
	123

output:
	ThreeTwoOne


Query Program
===============
import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);

		System.out.println("Enter the no :");
		int no=sc.nextInt();

		sc.nextLine();

		System.out.println("Enter the name :");
		String name=sc.nextLine();

		System.out.println("Enter the salary :");
		double sal=sc.nextDouble();

		System.out.println(no+" "+name+" "+sal);
	}
}


















































































































































































































































































 