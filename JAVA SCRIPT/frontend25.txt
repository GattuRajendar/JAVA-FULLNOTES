Q) Write a java program to find the character with the least frequency?

Example:1
	
input: 
	aaagbbcccce
output:
	g,e 

Example 2:

input:
	kgfkfcgcgc
output:
	k,f 

import java.util.*;
class Test  
{
	public static void main(String[] args) 
	{
		String str="aaagbbcccce";
		
		Map<Character,Integer> map=new LinkedHashMap<Character,Integer>();
		
		//inserting data in a map 
		for(char c:str.toCharArray())
		{
			map.put(c,map.getOrDefault(c,0)+1);
		}
		
		int minFrequency=Integer.MAX_VALUE;
		//finding least frequency
		for(int freq: map.values())
		{
			if(freq<minFrequency)
			{
				minFrequency=freq;
			}
		}
		
		//reading the data from map and storing in StringBuffer
		StringBuffer sb=new StringBuffer();
		for(Map.Entry<Character,Integer> entry: map.entrySet())
		{
			if(entry.getValue() == minFrequency)
			{
				sb.append(entry.getKey()).append(",");
			}
		}
		
		//set the length to stringbuffer
		if(sb.length()>0)
		{
			sb.setLength(sb.length()-1);
		}
		
		System.out.println(sb.toString());
	}
}



Q) Rohan is a kid who has just learned about creating words from alphabets. He has written some words in the notepad of his father's laptop. Now his father want to find the longest word written by Rohan using computer program. Write a program to find the longest string in a given list of Strings ?

input:
	yes no number

output:
	number

ex:
---
import java.util.*;
class Test  
{
	public static void main(String[] args) 
	{
		String str="yes no number";
		
		String[] sarr=str.split(" ");
		
		int len=sarr[0].length();
		
		String longest="";
		
		for(String s:sarr)
		{
			if(s.length() > len)
			{
				len=s.length();
				longest=s;
			}
		}
		
		System.out.println(longest);
	}
}


JavaScript Regular Expression
================================
Regular expressions are patterns used to match character combinations in strings. 

In JavaScript, regular expressions are also objects.


JavaScript Form validation using RegularExpression
=====================================================

To generate proper regular expression we can login below url.

ex:
	https://regex101.com/


ex:
<!DOCTYPE html>
<html>
<style>
input[type=text],input[type=password], select {
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}

input[type=submit] {
  width: 100%;
  background-color: #4CAF50;
  color: white;
  padding: 14px 20px;
  margin: 8px 0;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

input[type=submit]:hover {
  background-color: #45a049;
}

div {
  border-radius: 5px;
  background-color: #f2f2f2;
  padding: 20px;
  width:500px;
  position: relative;
  left:200px;
  top:20px;
}
</style>

<script type="text/javascript">
  
  function validate()
  {
    var name=document.getElementById('name').value;
    var pwd=document.getElementById('pwd').value;
    var phone=document.getElementById('phone').value;
    var email=document.getElementById('email').value;
    var country=document.getElementById('country').value;


    var namecheck=/[A-Za-z. ]{6,20}$/;
    
    var pwdcheck=/(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[A-Z])[a-zA-Z0-9!@#$%^&*]{10,30}$/;

    var phonecheck=/[789][0-9]{9}$/;

    var emailcheck=/[A-Za-z.]{1,}@[A-Za-z]{2,15}[.][A-Za-z]{3,}$/;


    
    if(!(namecheck.test(name)))
    {
        alert("UserName must be 6 characters");
        document.getElementById('name').value="";
        document.getElementById('name').focus();
        return false;
    }

    if(!(pwdcheck.test(pwd)))
    {
      alert("password must have 1 uppercase, 1 special symbol and 1 digit");
      document.getElementById('pwd').value="";
      document.getElementById('pwd').focus();
       return false;
    }

    if(!(phonecheck.test(phone)))
    {
      alert("Phone must start with 7,8,9 series with  10 digits");
      document.getElementById('phone').value="";
      document.getElementById('phone').focus();
       return false;
    }

    if(!(emailcheck.test(email)))
    {
      alert("Please insert valid email");
      document.getElementById('email').value="";
      document.getElementById('email').focus();
       return false;
    }

    if(country=="")
    {
      alert("Please select the country option ");
      return false;
    }
    return true;
}

</script>

<body>


<div>
  <form action="/action_page.php" onsubmit="validate()">

    <label for="name">UserName</label>
    <input type="text" id="name" name="name" placeholder="Your username.."/>

    <label for="pwd">Password</label>
    <input type="text" id="pwd" name="pwd" placeholder="Your password.."/>

    <label for="phone">Phone</label>
    <input type="text" id="phone" name="phone" placeholder="Your phone.."/>

     <label for="email">Email</label>
    <input type="text" id="email" name="email" placeholder="Your email.."/>

    <label for="country">Country</label>
    <select id="country" name="country">
      <option value="">none</option>
      <option value="australia">Australia</option>
      <option value="canada">Canada</option>
      <option value="usa">USA</option>
    </select>
  
    <input type="submit" value="Submit">
  </form>
</div>

</body>
</html>



Synchronous and Asynchronous in JavaScript
===============================================

Synchronous JavaScript:
-----------------------
As the name suggests synchronous means to be in a sequence, i.e. every statement of the code gets executed one by one. So, basically a statement has to wait for the 
earlier statement to get executed.

ex:

<script>
    document.write("Hi"); // First
    document.write("<br>");
  
    document.write("IHUB TALENT") ;// Second
    document.write("<br>");
      
    document.write("How are you"); // Third
</script>


Asynchronous JavaScript:
-----------------------
Asynchronous code allows the program to be executed immediately where the synchronous code will block further execution of the remaining code until it finishes the current one. This may not look like a big problem but when you see it in a bigger picture you realize that it may lead to delaying the User Interface.

ex:

<script>
    document.write("Hi");
    document.write("<br>");
  
    setTimeout(function() {
        document.write("Let us see what happens");
    }, 2000);
  
    document.write("<br>");
    document.write("End");
    document.write("<br>");
</script>


ex:
<script>
    document.write("Hi");
    document.write("<br>");
  
    setTimeout(() => {
        document.write("Let us see what happens");
    }, 2000);
  
    document.write("<br>");
    document.write("End");
    document.write("<br>");
</script>


