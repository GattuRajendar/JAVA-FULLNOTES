Types of JDBC Drivers
======================
We have four JDBC Drivers.

1) Type1 JDBC Driver / JDBC-ODBC Bridge Driver

2) Type2 JDBC Driver / Native API 

3) Type3 JDBC Driver / Net Protocol 

4) Type4 JDBC Driver / Native Protocol 


To use any JDBC Driver we need to register with DriverManager service.

Every JDBC application contains one built-in service called DriverManager service.


Class.forName()
===============
It is always recommanded to register JDBC Driver with DriverManager service.

It will load driver class but it won't create an object.

ex:
	Class.forName("driver-class-name");


Connection object
=================
Connection is an interface which is present in java.sql package.

It is an object of underlying supplied java class which implements java.sql.Connection interface.

To perform any operation in a database we need to create a connection with database.

Once work with database is completed it is recommanded to close the connection.

ex:
	Connection con;


DriverManager.getConnection()
=============================
DriverManager is a class which is present in java.sql package.

A getConnection() method of DriverManager class is used to interact with database software and returns one connection object representing connectivity between java application and database software.

ex:
	Connection con=DriverManager.getConnection("driver-url","username","password");


Statement object
================
Statement is an interface which is present in java.sql package.

It acts like a vehicle between java application and database software.

It is used to sends and executes SQL query in database software.

We can create Statement object by using createStatement() method of Connection object.
ex:
	Statement st=con.createStatement();


ResultSet object
================
ResultSet is an interface which is present in java.sql package.

Every ResultSet contains two positions.

1) BFR  (Before First Record/Row)

2) ALR  (After Last Record/Row)

By default record pointer points to BFR position.

rs.next()
=========
It is used to move record pointer to next position from current position.

If next position is a record then it will return true.

If next position is ALR then it will return false.

By default every record ResultSet having 1 as base index and every record ResultSet having 1 as column index.

Diagram: jdbc2.1


Types of Queries in JDBC
=========================
According to JDBC point of view , we have two types of queries.

1) Select Query 

2) Non-Select Query 

1) Select Query 
----------------
It will return bunch of records from database.
ex:
	select * from student;

A JDBC Statement object gave executeQuery() method to execute select query.
ex:
	ResultSet rs=st.executeQuery("select * from student");


2) Non-Select Query 
---------------------
It will return numeric value representing number of records effecting in a database table.
ex:
	delete from student;

A JDBC Statement object gave executeUpdate() method to execute non-select query.
ex:
	int result=st.executeUpdate("delete from student");




Steps to develop JDBC Application
==================================
We have six steps to develop JDBC Application.

1) Register JDBC Driver with DriverManager service.

2) Establish the connection with database software.

3) Create Statement object.

4) Sends and Executes SQL query in database software.

5) Gather the result from database software to process the result.

6) Close all JDBC Connection objects.


Type4 JDBC Driver / Native Protocol 
===================================

Driver Name		:	oracle.jdbc.driver.OracleDriver 
				-----------------  ------------
					pkg name 	driver-classname


Driver	URL		:	jdbc:oracle:thin:@localhost:1521:XE
				----------------- ---------  |    |
 				sub protocol      hostname portno logical DB Name

Database Username 	:	system 

Database Password	:	admin 



Eclipse 
=========
IDE		:	JEE 

Environment	:	Java

Flavours	:	Kepler, Indigo, Mars, Luna and etc.

Vendor		:	Eclipse Foundation 

Website		:	www.eclipse.org 

File Format	:	Zip file 

Download link	:	

https://drive.google.com/file/d/1c8TAX048EjAubIFByqZ0DzWZI3oKuauR/view?usp=sharing










































































