Jsp to Database Communication
=============================

Deployment Directory structure
------------------------------
JspApp5
|
|---Java Resources
|
|---WebContent
	|
	|---form.html
	|---process.jsp
	|
	|---WEB-INF
		|
		|---web.xml 
		|
		|-----lib
			|	
			|---ojdbc11.jar
Note:
----
In above application we need to add "servlet-api.jar" and "ojdbc11.jar" file in project build path.

Copy and paste ojdbc11.jar file inside "WEB-INF/lib" folder sperately.


form.html
---------

<form action="process.jsp">
	
	No: <input type="text" name="t1"/> <br>
	
	Name: <input type="text" name="t2"/> <br>
	
	Address: <input type="text" name="t3"/> <br>
	
	<input type="submit" value="submit"/>
	
</form>

web.xml
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

process.jsp
-----------
<%@page  import="java.sql.*"  buffer="8kb"   language="java"%>
<%

	String sno=request.getParameter("t1");
	int no=Integer.parseInt(sno);
	
	String name=request.getParameter("t2");
	
	String add=request.getParameter("t3");
	
	//insert the data into database
	Connection con=null;
	PreparedStatement ps=null;
	String qry=null;
	int result=0;
	try
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		qry="insert into student values(?,?,?)";
		ps=con.prepareStatement(qry);
		
		//set the values
		ps.setInt(1,no);
		ps.setString(2,name);
		ps.setString(3,add);
		
		//execute 
		result=ps.executeUpdate();
		if(result==0)
			out.println("No Record Inserted ");
		else
			out.println("Record Inserted");
		
		ps.close();
		con.close();
	}
	catch(Exception e)
	{
		e.printStackTrace();
	}
	
%>

Request url
---------
	http://localhost:8080/JspApp5/
Action Tags
============
Action tags are used to perform perticular operation.

Action tags are used to control the web pages and uses java bean.

Action tags are executed dynamically at runtime.

Action tags having only standard tags.

Action tags are divided into two types.

1) Standard Action tags 

2) Custom Action tags 


1) Standard Action tags 
----------------------
Built-In tags are called standard action tags.
ex:
	<jsp:forward>
	<jsp:include>
	<jsp:useBean>
	<jsp:setProperty>
	<jsp:getProperty>
	and etc.


Action forward
================
In action forward, output of source JSP program will be discarded and output of destination JSP program goes to browser window as dynamic response.

It internally uses servlet API functionality called rd.forward(req,res).

syntax:
-------
	<jsp:forward   page="page_name"/>


Deployment Directory structure
------------------------------
JspApp6
|
|---Java Resources
|
|---WebContent
	|		
	|---A.jsp
	|---B.jsp
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.


A.jsp
-----
<b><i> Begining of A.jsp </i></b>
<br>
<jsp:forward page="B.jsp"/>
<br>
<b><i> Ending of A.jsp </i></b>

B.jsp
------
<b><i> This is B.jsp </i></b>

web.xml
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>A.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

Request url
---------
	http://localhost:8080/JspApp6/



Action include
================
In action include, the output of source jsp program and output of destination jsp program combinely goes to browser window as dynamic response.

It internally uses servlet API functionality called rd.include(req,res).

syntax:
------
	<jsp:include  page="page_name"/>



Deployment Directory structure
------------------------------
JspApp7
|
|---Java Resources
|
|---WebContent
	|		
	|---A.jsp
	|---B.jsp
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.


A.jsp
-----
<b><i> Begining of A.jsp </i></b>
<br>
<jsp:include page="B.jsp"/>
<br>
<b><i> Ending of A.jsp </i></b>

B.jsp
------
<b><i> This is B.jsp </i></b>

web.xml
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>A.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

Request url
---------
	http://localhost:8080/JspApp7/



JSP to Java Bean Communication
==============================
JSP to java bean communication is possible by using three tags.

1) <jsp:useBean> tag
--------------------
	It is used to create and locate bean class object. 

2) <jsp:setProperty> tag 
---------------------
	It is used to set the values to bean object and calls setter method.

3) <jsp:getProperty> tag 
--------------------
	It is used to get the values from bean object and calls getter methods

Note:
-----
	All the above tags are independen tags.

Example1
----------

Deployment Directory Structure
------------------------------
JspApp8
|
|---Java Resources
|	|
	|------src
		|
		|---com.ihub.www
			|
			|---CubeNumber.java 
|---WebContent
	|
	|---process.jsp	
	|	
	|---WEB-INF
		|
		|----web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

process.jsp
-----------
<jsp:useBean id="cn" class="com.ihub.www.CubeNumber"></jsp:useBean>

<%=  "Cube of a given number is ="+cn.cube(5) %>


web.xml
------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>process.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>


CubeNumber.java
----------------
package com.ihub.www;

public class CubeNumber 
{
	public int cube(int n)
	{
		return n*n*n;
	}
}

Request url
----------
	http://localhost:8080/JspApp8/

Example2:
-----------

Deployment Directory Structure
-------------------------------
JspApp9
|
|---Java Resources
|	|
	|------src
		|
		|---com.ihub.www
			|
			|----User.java
|---WebContent
	|
	|---form.html
	|---process.jsp
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.


form.html
-----------
<form action="process.jsp">
	
	UserName: <input type="text" name="username"/> <br>
	
	Password: <input type="password" name="password"/> <br>
	
	Email: <input type="email" name="email"/> <br>
	
	<input type="submit" value="submit"/>
	
</form>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

User.java
----------
package com.ihub.www;

public class User                     
{
	private String username;
	private String password;
	private String email;
	
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
}

process.jsp
------------
<jsp:useBean id="u" class="com.ihub.www.User"></jsp:useBean>

<jsp:setProperty property="*" name="u"/>

Records Are <br>

<jsp:getProperty property="username" name="u"/> <br>
<jsp:getProperty property="password" name="u"/> <br>
<jsp:getProperty property="email" name="u"/> <br>

Request url
----------
	http://localhost:8080/JspApp9/











































































