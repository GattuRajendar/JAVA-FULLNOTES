Maven 
=====
Maven is a project building management tool.

It is a product of Apache Software Foundation.

It is an open source tool.

It provides following details.

1) Project structure 

2) pom.xml (project object model)

3) Reports

4) Documentations 

5) Packaging 


Diagram: jsp6.1


Steps to develop Maven Archetype Web Project
============================================
step1:
------
	Launch eclipse IDE by choosing workspace location.

step2:
-----
	Create a maven project.
	ex:
		File --> new --> Maven Project --> Next --> Uncheck (show the latest version)
		----> Group id : org.apache.maven.archetype 
	 	      Artifact id : maven-archetype-webapp 
		      version : 1.0 

		----> Next  ---> Group id : com.ihub.www
				 Artifact id : MavenProj
				 version : (keep same)
				 package : com.ihub.www   
		---> Finish. 

step3:
-----
	Add "servlet-api" maven dependency in pom.xml file.
	ex:
		<dependency>
   			<groupId>javax.servlet</groupId>
    			<artifactId>servlet-api</artifactId>
    			<version>2.5</version>
    			<scope>provided</scope>
		</dependency>


step4:
-----
	Write a the logic inside index.js file. 
	ex:
	
	index.jsp
	----------
	<center>
	<h1>
		<a href="test"> Click Me </a>
	</h1>
	</center>

step5:
------
	Create a "java" folder inside "src/main" folder.

step6:
------
	Create a TestSrv.java file inside "src/main/java" folder.
	ex:
		right click to java folder --> new ---> others ---> class --> Next -->
		package : com.ihub.www
		Name : TestSrv  --> finish. 

TestSrv.java
-----------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv extends HttpServlet
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		pw.println("<center><h1> This is Servlet Program </h1></center>");
		
		pw.close();
	}
}

step7:
-----
	Configure the servlet program in web.xml file .

web.xml
--------
<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" 
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <servlet>
  	<servlet-name>TestSrv</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>
	
step8:
-----
	Run the maven project.

	ex:
		right to MavenProj --> run as --> run on server --> Next --> removeAll --> Finish.


step9:
------
	Test the application by using below request url.
	ex:
		http://localhost:8080/MavenProj/



WinIT interview Program
========================
Q) Write a java program to count number of 2's?

input:
	22

output:
	6 (2,12,20,21,22)

ex:
---
class Test  
{
	public static void main(String[] args) 
	{
		int num=22;
		
		StringBuffer sb=new StringBuffer();
		
		for(int i=1;i<=num;i++)
		{
			sb.append(i);
		}
		
		String str=sb.toString(); //123456789.....22
		
		int count=0;
		
		for(int i=0;i<str.length();i++)
		{
			//convert character to string
			int n=Integer.parseInt(String.valueOf(str.charAt(i)));
			
			if(n==2)
			{
				count++;		
			}
		}
		
		System.out.println(count);
	}
}



Appollo Dart Interview Question
===============================

Q) What is the difference between Normalization and Denormalization ?

Normalization					Denormalization
--------------					----------------
It increases the complexity due to multiple 	It reduces the complexity due to single table.
tables.						

No redundant data				Redundant data

No waste of memory				Waste of memory

Slower reads 					Slower writes 

Low data availability				High data availability

Need of joins					No need of joins


































	






































