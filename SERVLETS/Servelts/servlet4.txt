Servlet to Database Communication
=================================
Diagram: servlet4.1

Deployment Directory structure
------------------------------
DBApp
|
|---Java Resources
	|
	|-------src
		|
		|---com.ihub.www
			|
			|---DBSrv.java
|
|----WebContent
	|
	|---form.html
	|
	|---WEB-INF
		|
		|----web.xml 
		|
		|------lib
			|	
			|---ojdbc11.jar

Note:
-----
In above application we need to add "servlet-api.jar" and "ojdbc11.jar" file in project build path.

Copy and paste ojdbc11.jar file inside "WEB-INF/lib" folder seperately.


student table
-------------
drop table student;

create table student(sno number(3),sname varchar2(10),sadd varchar2(12));


form.html
----------

<form action="test" method="GET">
	
	<table align="center">
		<tr>
			<td>No:</td>
			<td><input type="text" name="t1"/></td>
		</tr>
		<tr>
			<td>Name:</td>
			<td><input type="text" name="t2"/></td>
		</tr>
		<tr>
			<td>Address:</td>
			<td><input type="text" name="t3"/></td>
		</tr>
		<tr>
			<td><input type="reset" value="reset"/></td>
			<td><input type="submit" value="submit"/></td>
		</tr>
	</table>
</form>

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>DBSrv</servlet-name>
  	<servlet-class>com.ihub.www.DBSrv</servlet-class>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>DBSrv</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

DBSrv.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class DBSrv extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String sno=req.getParameter("t1");
		int no=Integer.parseInt(sno);
		String name=req.getParameter("t2");
		String add=req.getParameter("t3");
		
		//insert the data into database 
		Connection con=null;
		PreparedStatement ps=null;
		int result=0;
		String qry=null;
		try
		{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			con=DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
			qry="insert into student values(?,?,?)";
			ps=con.prepareStatement(qry);
			
			//set the vaues
			ps.setInt(1,no);
			ps.setString(2, name);
			ps.setString(3, add);
			
			//execute the query
			result=ps.executeUpdate();
			
			if(result==0)
				pw.println("<center><h1>Record Not Inserted</h1></center>");
			else
				pw.println("<center><h1>Record Inserted</h1></center>");
			
			ps.close();
			con.close();
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		
		pw.close();
	}
}

Request url
---------
	http://localhost:8080/DBApp/



Form Validation
================
The process of checking format and pattern of form data is called form validation and such logic is called form validation logic.

There are two ways to perform form validation.

1) Client side form validation 

2) Server side form validation 


1) Client side form validation
----------------------------
Validation which is performed at client side is called client side form validation.

To perform client side form validation we need to use javascript.


2) Server side form validation
----------------------------
Validation which is performed at server side is called server side form validation.

To perform server side form validation we need to use servlets/filters.


Deployment Directory structure
-------------------------------
ValidationApp
|
|---Java Resources
|	|
	|-----src		
		|
		|---com.ihub.wwww
			|
			|----TestSrv.java
|---WebContent
	|
	|-----form.html
	|
	|-----validation.js
	|
	|-----WEB-INF
		|
		|---web.xml 

Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.


form.html
---------
<!DOCTYPE html>
<html>

	<head>
		<!--  adding external javascript file -->
		<script language="javascript" src="validation.js"></script>
	</head>
	<body>
			<form name="myform" action="test" method="GET" onsubmit="return validate()">
	
				Name: <input type="text" name="t1"/> <br>
	
				Age: <input type="text" name="t2"/> <br>
				
				<!--  hidden box field -->
				<input type="hidden" name="vflag" value="no"/> 
	
				<input type="submit" value="submit"/>
	
			</form>
	</body>
</html>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
 	
 	<servlet>
 		<servlet-name>TestSrv</servlet-name>
 		<servlet-class>com.ihub.www.TestSrv</servlet-class>
 	</servlet>
 	<servlet-mapping>
 		<servlet-name>TestSrv</servlet-name>
 		<url-pattern>/test</url-pattern>
 	</servlet-mapping>
 	
 	<welcome-file-list>
 		<welcome-file>form.html</welcome-file>
 	</welcome-file-list>
 
</web-app>
	

validation.js
--------------
function validate()
{
	
	//reading form data
	var name=document.myform.t1.value;
	var age=document.myform.t2.value;
	document.myform.vflag.value="yes";
	
	if(name=="")
	{
		alert("Name is mandatory");
		document.myform.t1.focus();
		return false;
	}
	
	if(age=="")
	{
		alert("Age is mandatory");
		document.myform.t2.focus();
		return false;
	}
	else
	{
		if(isNaN(age))
		{
			alert("Age must be numeric");
			document.myform.t2.value="";
			document.myform.t2.focus();
			return false;
		}
	}


	return true;
}


TestSrv.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data
		String name=req.getParameter("t1");
		String sage=req.getParameter("t2");
		String status=req.getParameter("vflag");
		int age=0;
		
		if(status.equals("no"))
		{
			if(name=="" || name==null || name.length()==0)
			{
				pw.println("<center><h1>Name is mandatory</h1></center>");
				return;
			}
			if(sage=="" || sage==null || sage.length()==0)
			{
				pw.println("<center><h1>Age is mandatory</h1></center>");
				return;
			}
			else
			{
				try
				{
					age=Integer.parseInt(sage);
				}
				catch(NumberFormatException nfe)
				{
					pw.println("<center><h1>Age must be numeric</h1></center>");
					return;
				}
			}
		}
		
		if(status.equals("yes"))
		{
			age=Integer.parseInt(sage);
		}
		
		if(age<18)
			pw.println("<center><h1>U r not eligible to vote </h1></center>");
		else
			pw.println("<center><h1>U r eligible to vote </h1></center>");
		
		pw.close();
	}
}

Request url
----------
	http://localhost:8080/ValidationApp/




























































