RestController
==============
RestController is used for creating Restful web services with the help of @RestController annotation.

This annotation is used at the class level and allows the class to handle all the request made by the client.

@RestController annotation is a combination of two annotations i.e @Controller and @ResponseBody.

We have following HTTP methods along with REST Annotations.

ex:
	HTTP Method			Annotation
	-----------			----------
	GET				GetMapping
	POST				PostMapping
	PUT				PutMapping
	DELETE				DeleteMapping
	and etc.


Spring Boot Application using @RestController annotation
------------------------------------------------------

Project structure 
-----------------

FourthSB
|
|---src/main/java
|	|
	|---com.ihub.www
		|
		|---FourthSBApplication.java

	|---com.ihub.www.controller
		|
		|---HomeController.java

|---src/main/resources
|		|
		|---application.properties

|---src/test/java
|
|---pom.xml 

step1:
------
	Create a spring boot starter project i.e fourthSB.
	ex:
		staters :		
				Spring Web 


step2:
-----
	Create a com.ihub.www.controller package inside "src/main/java" folder.
	

step3:
-----
	Create a HomeController.java file inside "com.ihub.www.controller" package.

HomeController.java
-------------------
package com.ihub.www.controller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class HomeController 
{
	@GetMapping("/home")
	public String home()
	{
		return "This is RestController Annotation";
	}
}



step4:
------
	Configure server port in application.properties file.

application.properties
---------------------
server.port=9191


step5:
-----
	Run the spring boot starter project.


step6:
-----
	Test the application by using below request url.
	ex:
		http://localhost:9191/home



Q) What is the difference between @Controller and @RestController?


@Controller					@RestController
---------------					----------------
It is used to develop spring MVC based 		It is used to develop RESTful Web Services. 
applications.
	
It is a specialized version of @Component 	It is a specialized version of @Controller annotation.					annotation.

We need to use @ResponseBody in every handler 	It is a combination of @Controller and 
method.						@ResponseBody annotation.

It returns view in spring MVC.			It does not return view.

It is added to Spring 2.5 version.		It is added to Spring 4.0 version.

Q) What is the difference between Monolethic Architecture vs Microservice Architecture?


Monolethic Architecture
-----------------------
Monolethic means composed all in one place.

In Monolethic architecture we will develop services individually.At the end of the development we are packing all the services in a single war file and deploying in a server.

Diagram: sb5.1

Advantages:

1) Simple to develop 

2) Simple to deploy

3) Simple to test 

4) Simple to scale

Disadvantages:

1) Large and complex application 

2) Slow Development 

3) Blocks contineous development

4) Unreliable

5) Inflexible 


Microservice Architecture
========================
Microservices are the small/mini services that work together.

In microservice architecture, each service is self contained and implements a single business capabilities.

The microservice architectural style is an approach to develop a single application as a suit 
of small services.


Diagram: sb5.2


Advantages:

> Independent Development 

> Independent Deployment 

> Fault Tolerance 

> Mixed Technology Stack

> Granular Scaling 

































	













